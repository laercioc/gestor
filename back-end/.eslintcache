[{"C:\\Projects\\gestor\\src\\index.tsx":"1","C:\\Projects\\gestor\\src\\App.tsx":"2","C:\\Projects\\gestor\\src\\routes.tsx":"3","C:\\Projects\\gestor\\src\\pages\\Home\\index.tsx":"4","C:\\Projects\\gestor\\src\\pages\\Home\\layout\\index.tsx":"5","C:\\Projects\\gestor\\src\\services\\api.ts":"6","C:\\Projects\\gestor\\src\\pages\\Admin\\index.tsx":"7","C:\\Projects\\gestor\\src\\pages\\Admin\\layout\\index.tsx":"8","C:\\Projects\\gestor\\src\\redux\\store.js":"9","C:\\Projects\\gestor\\src\\components\\Loading\\index.tsx":"10"},{"size":193,"mtime":1612291323781,"results":"11","hashOfConfig":"12"},{"size":1319,"mtime":1612311409081,"results":"13","hashOfConfig":"12"},{"size":791,"mtime":1612320877827,"results":"14","hashOfConfig":"12"},{"size":1628,"mtime":1612311882266,"results":"15","hashOfConfig":"12"},{"size":1151,"mtime":1612296071797,"results":"16","hashOfConfig":"12"},{"size":101,"mtime":1612302499470,"results":"17","hashOfConfig":"12"},{"size":1061,"mtime":1612322076915,"results":"18","hashOfConfig":"12"},{"size":1474,"mtime":1612322541896,"results":"19","hashOfConfig":"12"},{"size":712,"mtime":1612311856617,"results":"20","hashOfConfig":"12"},{"size":319,"mtime":1612322317574,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1qo1zcf",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Projects\\gestor\\src\\index.tsx",[],[],"C:\\Projects\\gestor\\src\\App.tsx",[],"C:\\Projects\\gestor\\src\\routes.tsx",[],"C:\\Projects\\gestor\\src\\pages\\Home\\index.tsx",[],"C:\\Projects\\gestor\\src\\pages\\Home\\layout\\index.tsx",[],"C:\\Projects\\gestor\\src\\services\\api.ts",[],"C:\\Projects\\gestor\\src\\pages\\Admin\\index.tsx",["46","47"],"import React, { useEffect } from 'react'\r\nimport { notify } from 'react-notify-toast'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  useDispatch,\r\n  useSelector as useReduxSelector,\r\n  TypedUseSelectorHook\r\n} from 'react-redux'\r\nimport IState from '../../redux/IStore'\r\n\r\nimport API from '../../services/api'\r\nimport Layout from './layout'\r\n\r\nconst Admin: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  const useSelector: TypedUseSelectorHook<IState> = useReduxSelector\r\n  const state = useSelector(state => state)\r\n\r\n  useEffect(() => {\r\n    if (!state.user.logged) {\r\n      history.push('/')\r\n    }\r\n  }, [])\r\n\r\n  function handleUserLogout() {\r\n    localStorage.removeItem('token')\r\n    dispatch({ type: 'SET_LOGOUT' })\r\n    dispatch({ type: 'SET_LOGGED_TOKEN', token: '' })\r\n\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Layout\r\n      currentRoute={location.pathname}\r\n      handleUserLogout={handleUserLogout}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Admin\r\n","C:\\Projects\\gestor\\src\\pages\\Admin\\layout\\index.tsx",["48","49"],"import React from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\nimport './styles.css'\r\n\r\ninterface IAdmin {\r\n  currentRoute: any\r\n  handleUserLogout: any\r\n}\r\n\r\nconst Layout: React.FC<IAdmin> = ({ currentRoute, handleUserLogout }) => {\r\n  return (\r\n    <>\r\n      <div className=\"admin_container\">\r\n        <div className=\"nav\">\r\n          <div className=\"title\">Administrativo</div>\r\n\r\n          <ul>\r\n            <Link to={'/admin'}>\r\n              <li className={currentRoute === '/admin' ? 'active' : ''}>\r\n                Início\r\n              </li>\r\n            </Link>\r\n\r\n            <Link to={'/admin/employees'}>\r\n              <li\r\n                className={currentRoute === '/admin/employees' ? 'active' : ''}\r\n              >\r\n                Funcionários\r\n              </li>\r\n            </Link>\r\n\r\n            <Link to={'/'}>\r\n              <li\r\n                className={currentRoute === '/admin/positions' ? 'active' : ''}\r\n              >\r\n                Cargos\r\n              </li>\r\n            </Link>\r\n          </ul>\r\n\r\n          <button className=\"logout\" onClick={() => handleUserLogout()}>\r\n            Sair\r\n          </button>\r\n        </div>\r\n        <div className=\"main\">\r\n          <Route path=\"/admin\" exact>\r\n            <h1>main</h1>\r\n          </Route>\r\n\r\n          <Route path=\"/admin/create\" exact>\r\n            <h1>create</h1>\r\n          </Route>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","C:\\Projects\\gestor\\src\\redux\\store.js",[],[],"C:\\Projects\\gestor\\src\\components\\Loading\\index.tsx",[],{"ruleId":"50","severity":1,"message":"51","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":16},{"ruleId":"50","severity":1,"message":"54","line":11,"column":8,"nodeType":"52","messageId":"53","endLine":11,"endColumn":11},{"ruleId":"55","severity":1,"message":"56","line":7,"column":17,"nodeType":"57","messageId":"58","endLine":7,"endColumn":20,"suggestions":"59"},{"ruleId":"55","severity":1,"message":"56","line":8,"column":21,"nodeType":"57","messageId":"58","endLine":8,"endColumn":24,"suggestions":"60"},"@typescript-eslint/no-unused-vars","'notify' is defined but never used.","Identifier","unusedVar","'API' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["61","62"],["63","64"],{"messageId":"65","fix":"66","desc":"67"},{"messageId":"68","fix":"69","desc":"70"},{"messageId":"65","fix":"71","desc":"67"},{"messageId":"68","fix":"72","desc":"70"},"suggestUnknown",{"range":"73","text":"74"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"73","text":"75"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"76","text":"74"},{"range":"76","text":"75"},[138,141],"unknown","never",[163,166]]